// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Workspaces.
    /// </summary>
    public static partial class WorkspacesExtensions
    {
            /// <summary>
            /// Gets the properties of the specified machine learning workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static Workspace Get(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName)
            {
                return operations.GetAsync(subscriptionId, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the properties of the specified machine learning workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Workspace> GetAsync(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates or updates a workspace with the specified parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='parameters'>
            /// The parameters for creating or updating a machine learning workspace.
            /// </param>
            public static Workspace CreateOrUpdate(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName, Workspace parameters)
            {
                return operations.CreateOrUpdateAsync(subscriptionId, resourceGroupName, workspaceName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates or updates a workspace with the specified parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='parameters'>
            /// The parameters for creating or updating a machine learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Workspace> CreateOrUpdateAsync(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName, Workspace parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateOrUpdateWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a machine learning workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static void Delete(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName)
            {
                operations.DeleteAsync(subscriptionId, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a machine learning workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Updates a machine learning workspace with the specified parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='parameters'>
            /// The parameters for updating a machine learning workspace.
            /// </param>
            public static Workspace Update(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName, WorkspaceUpdateParameters parameters)
            {
                return operations.UpdateAsync(subscriptionId, resourceGroupName, workspaceName, parameters).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates a machine learning workspace with the specified parameters.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='parameters'>
            /// The parameters for updating a machine learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Workspace> UpdateAsync(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName, WorkspaceUpdateParameters parameters, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.UpdateWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, parameters, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists all the available machine learning workspaces under the specified
            /// resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='skiptoken'>
            /// Continuation token for pagination.
            /// </param>
            public static WorkspaceListResult ListByResourceGroup(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string skiptoken = default(string))
            {
                return operations.ListByResourceGroupAsync(subscriptionId, resourceGroupName, skiptoken).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all the available machine learning workspaces under the specified
            /// resource group.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='skiptoken'>
            /// Continuation token for pagination.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<WorkspaceListResult> ListByResourceGroupAsync(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string skiptoken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByResourceGroupWithHttpMessagesAsync(subscriptionId, resourceGroupName, skiptoken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists all the keys associated with this workspace. This includes keys for
            /// the storage account, app insights and password for container registry
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static ListWorkspaceKeysResult ListKeys(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName)
            {
                return operations.ListKeysAsync(subscriptionId, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all the keys associated with this workspace. This includes keys for
            /// the storage account, app insights and password for container registry
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ListWorkspaceKeysResult> ListKeysAsync(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListKeysWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Resync all the keys associated with this workspace. This includes keys for
            /// the storage account, app insights and password for container registry
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            public static void ResyncKeys(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName)
            {
                operations.ResyncKeysAsync(subscriptionId, resourceGroupName, workspaceName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Resync all the keys associated with this workspace. This includes keys for
            /// the storage account, app insights and password for container registry
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='resourceGroupName'>
            /// Name of the resource group in which workspace is located.
            /// </param>
            /// <param name='workspaceName'>
            /// Name of Azure Machine Learning workspace.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ResyncKeysAsync(this IWorkspaces operations, string subscriptionId, string resourceGroupName, string workspaceName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ResyncKeysWithHttpMessagesAsync(subscriptionId, resourceGroupName, workspaceName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Lists all the available machine learning workspaces under the specified
            /// subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='skiptoken'>
            /// Continuation token for pagination.
            /// </param>
            public static WorkspaceListResult ListBySubscription(this IWorkspaces operations, string subscriptionId, string skiptoken = default(string))
            {
                return operations.ListBySubscriptionAsync(subscriptionId, skiptoken).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all the available machine learning workspaces under the specified
            /// subscription.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscriptionId'>
            /// Azure subscription identifier.
            /// </param>
            /// <param name='skiptoken'>
            /// Continuation token for pagination.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<WorkspaceListResult> ListBySubscriptionAsync(this IWorkspaces operations, string subscriptionId, string skiptoken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListBySubscriptionWithHttpMessagesAsync(subscriptionId, skiptoken, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
