// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// ImageOperations operations.
    /// </summary>
    public partial interface IImageOperations
    {
        /// <summary>
        /// Create an Image
        /// </summary>
        /// <param name='subscriptionId'>
        /// The Azure Subscription ID.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group in which the workspace is located.
        /// </param>
        /// <param name='workspace'>
        /// The name of the workspace.
        /// </param>
        /// <param name='imageRequest'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ModelErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationHeaderResponse<ImageCreateHeaders>> CreateWithHttpMessagesAsync(System.Guid subscriptionId, string resourceGroupName, string workspace, ImageRequestBase imageRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Query the list of Images in a workspace. If no filter is passed,
        /// the query lists all the Images in the given workspace. The returned
        /// list is paginated and the count of item in each page is an optional
        /// parameter.
        /// </summary>
        /// <param name='subscriptionId'>
        /// The Azure Subscription ID.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group in which the workspace is located.
        /// </param>
        /// <param name='workspace'>
        /// The name of the workspace.
        /// </param>
        /// <param name='tag'>
        /// The object tag.
        /// </param>
        /// <param name='name'>
        /// The object name.
        /// </param>
        /// <param name='version'>
        /// The object version.
        /// </param>
        /// <param name='modelId'>
        /// The Model id.
        /// </param>
        /// <param name='modelName'>
        /// The Model name.
        /// </param>
        /// <param name='count'>
        /// The number of items to retrieve in a page
        /// </param>
        /// <param name='skipToken'>
        /// The continuation token to retrieve the next page
        /// </param>
        /// <param name='orderBy'>
        /// The option to order response. Possible values include:
        /// 'CreatedAtDesc', 'CreatedAtAsc', 'UpdatedAtDesc', 'UpdatedAtAsc'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ModelErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<PaginatedImageList>> ListQueryWithHttpMessagesAsync(System.Guid subscriptionId, string resourceGroupName, string workspace, string tag = default(string), string name = default(string), string version = default(string), string modelId = default(string), string modelName = default(string), string count = default(string), string skipToken = default(string), string orderBy = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Patch a specific image
        /// </summary>
        /// <param name='subscriptionId'>
        /// The Azure Subscription ID.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group in which the workspace is located.
        /// </param>
        /// <param name='workspace'>
        /// The name of the workspace.
        /// </param>
        /// <param name='id'>
        /// The object id.
        /// </param>
        /// <param name='patch'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ModelErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Image>> PatchWithHttpMessagesAsync(System.Guid subscriptionId, string resourceGroupName, string workspace, string id, IList<JsonPatchOperation> patch = default(IList<JsonPatchOperation>), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets Image by ID
        /// </summary>
        /// <param name='subscriptionId'>
        /// The Azure Subscription ID.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group in which the workspace is located.
        /// </param>
        /// <param name='workspace'>
        /// The name of the workspace.
        /// </param>
        /// <param name='id'>
        /// The object id.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ModelErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse<Image>> QueryByIdWithHttpMessagesAsync(System.Guid subscriptionId, string resourceGroupName, string workspace, string id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes the specific image
        /// </summary>
        /// <param name='subscriptionId'>
        /// The Azure Subscription ID.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Name of the resource group in which the workspace is located.
        /// </param>
        /// <param name='workspace'>
        /// The name of the workspace.
        /// </param>
        /// <param name='id'>
        /// The object id.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ModelErrorResponseException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown when a required parameter is null
        /// </exception>
        Task<HttpOperationResponse> DeleteWithHttpMessagesAsync(System.Guid subscriptionId, string resourceGroupName, string workspace, string id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
