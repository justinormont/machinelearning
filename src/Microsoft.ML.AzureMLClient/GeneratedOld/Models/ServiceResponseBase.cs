// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The base service response. The correct inherited response based on
    /// computeType will be returned (ex. ACIServiceResponse)
    /// </summary>
    public partial class ServiceResponseBase
    {
        /// <summary>
        /// Initializes a new instance of the ServiceResponseBase class.
        /// </summary>
        public ServiceResponseBase()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceResponseBase class.
        /// </summary>
        /// <param name="createdTime">The time the service was created.</param>
        /// <param name="deploymentType">The deployment type for the service.
        /// Possible values include: 'GRPCRealtimeEndpoint',
        /// 'HttpRealtimeEndpoint'</param>
        /// <param name="description">The service description.</param>
        /// <param name="error">The error details.</param>
        /// <param name="id">The service Id.</param>
        /// <param name="kvTags">The service tag dictionary. Tags are
        /// mutable.</param>
        /// <param name="name">The service name.</param>
        /// <param name="properties">The service property dictionary.
        /// Properties are immutable.</param>
        /// <param name="state">The current state of the service. Possible
        /// values include: 'Transitioning', 'Healthy', 'Unhealthy',
        /// 'Failed'</param>
        /// <param name="tags">The service tag list.</param>
        /// <param name="updatedTime">The time the service was updated.</param>
        public ServiceResponseBase(System.DateTime? createdTime = default(System.DateTime?), DeploymentType? deploymentType = default(DeploymentType?), string description = default(string), ModelErrorResponse error = default(ModelErrorResponse), string id = default(string), IDictionary<string, string> kvTags = default(IDictionary<string, string>), string name = default(string), IDictionary<string, string> properties = default(IDictionary<string, string>), WebServiceState? state = default(WebServiceState?), IList<string> tags = default(IList<string>), System.DateTime? updatedTime = default(System.DateTime?))
        {
            CreatedTime = createdTime;
            DeploymentType = deploymentType;
            Description = description;
            Error = error;
            Id = id;
            KvTags = kvTags;
            Name = name;
            Properties = properties;
            State = state;
            Tags = tags;
            UpdatedTime = updatedTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the time the service was created.
        /// </summary>
        [JsonProperty(PropertyName = "createdTime")]
        public System.DateTime? CreatedTime { get; set; }

        /// <summary>
        /// Gets or sets the deployment type for the service. Possible values
        /// include: 'GRPCRealtimeEndpoint', 'HttpRealtimeEndpoint'
        /// </summary>
        [JsonProperty(PropertyName = "deploymentType")]
        public DeploymentType? DeploymentType { get; set; }

        /// <summary>
        /// Gets or sets the service description.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the error details.
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public ModelErrorResponse Error { get; set; }

        /// <summary>
        /// Gets or sets the service Id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the service tag dictionary. Tags are mutable.
        /// </summary>
        [JsonProperty(PropertyName = "kvTags")]
        public IDictionary<string, string> KvTags { get; set; }

        /// <summary>
        /// Gets or sets the service name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the service property dictionary. Properties are
        /// immutable.
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// Gets or sets the current state of the service. Possible values
        /// include: 'Transitioning', 'Healthy', 'Unhealthy', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public WebServiceState? State { get; set; }

        /// <summary>
        /// Gets or sets the service tag list.
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IList<string> Tags { get; set; }

        /// <summary>
        /// Gets or sets the time the service was updated.
        /// </summary>
        [JsonProperty(PropertyName = "updatedTime")]
        public System.DateTime? UpdatedTime { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Error != null)
            {
                Error.Validate();
            }
        }
    }
}
