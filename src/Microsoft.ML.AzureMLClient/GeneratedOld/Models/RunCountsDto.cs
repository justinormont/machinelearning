// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class RunCountsDto
    {
        /// <summary>
        /// Initializes a new instance of the RunCountsDto class.
        /// </summary>
        public RunCountsDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RunCountsDto class.
        /// </summary>
        public RunCountsDto(int? provisioning = default(int?), int? queued = default(int?), int? notStarted = default(int?), int? starting = default(int?), int? preparing = default(int?), int? running = default(int?), int? completed = default(int?), int? failed = default(int?), int? canceled = default(int?), int? notResponding = default(int?))
        {
            Provisioning = provisioning;
            Queued = queued;
            NotStarted = notStarted;
            Starting = starting;
            Preparing = preparing;
            Running = running;
            Completed = completed;
            Failed = failed;
            Canceled = canceled;
            NotResponding = notResponding;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "provisioning")]
        public int? Provisioning { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "queued")]
        public int? Queued { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "notStarted")]
        public int? NotStarted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "starting")]
        public int? Starting { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preparing")]
        public int? Preparing { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "running")]
        public int? Running { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "completed")]
        public int? Completed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "failed")]
        public int? Failed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "canceled")]
        public int? Canceled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "notResponding")]
        public int? NotResponding { get; set; }

    }
}
