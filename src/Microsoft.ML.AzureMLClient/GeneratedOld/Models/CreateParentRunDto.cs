// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class CreateParentRunDto
    {
        /// <summary>
        /// Initializes a new instance of the CreateParentRunDto class.
        /// </summary>
        public CreateParentRunDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CreateParentRunDto class.
        /// </summary>
        /// <param name="trainingType">Possible values include: 'TrainFull',
        /// 'TrainAndValidate', 'CrossValidate', 'MeanCrossValidate'</param>
        /// <param name="acquisitionFunction">Possible values include: 'EI',
        /// 'PI', 'UCB'</param>
        /// <param name="primaryMetric">Possible values include:
        /// 'AUC_weighted', 'accuracy', 'balanced_accuracy',
        /// 'average_precision_score_weighted', 'precision_score_weighted',
        /// 'spearman_correlation', 'normalized_root_mean_squared_error',
        /// 'r2_score', 'normalized_mean_absolute_error',
        /// 'normalized_root_mean_squared_log_error'</param>
        public CreateParentRunDto(int? numIterations = default(int?), string trainingType = default(string), string acquisitionFunction = default(string), IList<string> metrics = default(IList<string>), string primaryMetric = default(string), double? trainSplit = default(double?), int? maxTimeSeconds = default(int?), double? acquisitionParameter = default(double?), int? numCrossValidation = default(int?), string target = default(string), string rawAMLSettingsString = default(string), string amlSettingsJsonString = default(string), string dataPrepJsonString = default(string), bool? enableSubsampling = default(bool?))
        {
            NumIterations = numIterations;
            TrainingType = trainingType;
            AcquisitionFunction = acquisitionFunction;
            Metrics = metrics;
            PrimaryMetric = primaryMetric;
            TrainSplit = trainSplit;
            MaxTimeSeconds = maxTimeSeconds;
            AcquisitionParameter = acquisitionParameter;
            NumCrossValidation = numCrossValidation;
            Target = target;
            RawAMLSettingsString = rawAMLSettingsString;
            AmlSettingsJsonString = amlSettingsJsonString;
            DataPrepJsonString = dataPrepJsonString;
            EnableSubsampling = enableSubsampling;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "numIterations")]
        public int? NumIterations { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'TrainFull',
        /// 'TrainAndValidate', 'CrossValidate', 'MeanCrossValidate'
        /// </summary>
        [JsonProperty(PropertyName = "trainingType")]
        public string TrainingType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'EI', 'PI', 'UCB'
        /// </summary>
        [JsonProperty(PropertyName = "acquisitionFunction")]
        public string AcquisitionFunction { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "metrics")]
        public IList<string> Metrics { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'AUC_weighted', 'accuracy',
        /// 'balanced_accuracy', 'average_precision_score_weighted',
        /// 'precision_score_weighted', 'spearman_correlation',
        /// 'normalized_root_mean_squared_error', 'r2_score',
        /// 'normalized_mean_absolute_error',
        /// 'normalized_root_mean_squared_log_error'
        /// </summary>
        [JsonProperty(PropertyName = "primaryMetric")]
        public string PrimaryMetric { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "trainSplit")]
        public double? TrainSplit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maxTimeSeconds")]
        public int? MaxTimeSeconds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "acquisitionParameter")]
        public double? AcquisitionParameter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "numCrossValidation")]
        public int? NumCrossValidation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public string Target { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rawAMLSettingsString")]
        public string RawAMLSettingsString { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amlSettingsJsonString")]
        public string AmlSettingsJsonString { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dataPrepJsonString")]
        public string DataPrepJsonString { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enableSubsampling")]
        public bool? EnableSubsampling { get; set; }

    }
}
