// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class DirTreeNode
    {
        /// <summary>
        /// Initializes a new instance of the DirTreeNode class.
        /// </summary>
        public DirTreeNode()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DirTreeNode class.
        /// </summary>
        public DirTreeNode(string name = default(string), string hash = default(string), string type = default(string), System.DateTime? timestamp = default(System.DateTime?), string sasUrl = default(string), long? sizeBytes = default(long?), IDictionary<string, DirTreeNode> children = default(IDictionary<string, DirTreeNode>))
        {
            Name = name;
            Hash = hash;
            Type = type;
            Timestamp = timestamp;
            SasUrl = sasUrl;
            SizeBytes = sizeBytes;
            Children = children;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hash")]
        public string Hash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime? Timestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sasUrl")]
        public string SasUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sizeBytes")]
        public long? SizeBytes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "children")]
        public IDictionary<string, DirTreeNode> Children { get; set; }

    }
}
