// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// The target runtime
    /// </summary>
    public partial class TargetRuntime
    {
        /// <summary>
        /// Initializes a new instance of the TargetRuntime class.
        /// </summary>
        public TargetRuntime()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TargetRuntime class.
        /// </summary>
        /// <param name="runtimeType">Possible values include: 'SparkPython',
        /// 'Tlc37', 'Python'</param>
        /// <param name="targetArchitecture">Possible values include: 'Amd64',
        /// 'Arm32v7'</param>
        public TargetRuntime(string runtimeType = default(string), string targetArchitecture = default(string), IDictionary<string, string> properties = default(IDictionary<string, string>))
        {
            RuntimeType = runtimeType;
            TargetArchitecture = targetArchitecture;
            Properties = properties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'SparkPython', 'Tlc37',
        /// 'Python'
        /// </summary>
        [JsonProperty(PropertyName = "runtimeType")]
        public string RuntimeType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Amd64', 'Arm32v7'
        /// </summary>
        [JsonProperty(PropertyName = "targetArchitecture")]
        public string TargetArchitecture { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

    }
}
