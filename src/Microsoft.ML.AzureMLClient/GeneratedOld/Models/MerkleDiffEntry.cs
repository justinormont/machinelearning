// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MerkleDiffEntry
    {
        /// <summary>
        /// Initializes a new instance of the MerkleDiffEntry class.
        /// </summary>
        public MerkleDiffEntry()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MerkleDiffEntry class.
        /// </summary>
        /// <param name="operationType">Possible values include: 'Added',
        /// 'Modified', 'Removed'</param>
        public MerkleDiffEntry(string operationType = default(string), string filePath = default(string), bool? isFile = default(bool?), System.Guid? oldFileStoreId = default(System.Guid?), System.Guid? newFileStoreId = default(System.Guid?))
        {
            OperationType = operationType;
            FilePath = filePath;
            IsFile = isFile;
            OldFileStoreId = oldFileStoreId;
            NewFileStoreId = newFileStoreId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Added', 'Modified',
        /// 'Removed'
        /// </summary>
        [JsonProperty(PropertyName = "operationType")]
        public string OperationType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "filePath")]
        public string FilePath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isFile")]
        public bool? IsFile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "oldFileStoreId")]
        public System.Guid? OldFileStoreId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "newFileStoreId")]
        public System.Guid? NewFileStoreId { get; set; }

    }
}
