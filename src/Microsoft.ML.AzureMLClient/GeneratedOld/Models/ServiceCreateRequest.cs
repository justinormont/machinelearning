// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ServiceCreateRequest
    {
        /// <summary>
        /// Initializes a new instance of the ServiceCreateRequest class.
        /// </summary>
        public ServiceCreateRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServiceCreateRequest class.
        /// </summary>
        /// <param name="name">The service name.</param>
        /// <param name="computeType">The compute environment type for the
        /// service. Possible values include: 'ACI', 'BATCH', 'AKS',
        /// 'FPGA'</param>
        /// <param name="description">The description of the service.</param>
        /// <param name="tags">Service tag list</param>
        /// <param name="kvTags">Service tag dictionary</param>
        /// <param name="properties">Service property dictionary</param>
        public ServiceCreateRequest(string name, string computeType, string description = default(string), IList<string> tags = default(IList<string>), IDictionary<string, string> kvTags = default(IDictionary<string, string>), IDictionary<string, string> properties = default(IDictionary<string, string>))
        {
            Name = name;
            Description = description;
            Tags = tags;
            KvTags = kvTags;
            Properties = properties;
            ComputeType = computeType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the service name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the description of the service.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets service tag list
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IList<string> Tags { get; set; }

        /// <summary>
        /// Gets or sets service tag dictionary
        /// </summary>
        [JsonProperty(PropertyName = "kvTags")]
        public IDictionary<string, string> KvTags { get; set; }

        /// <summary>
        /// Gets or sets service property dictionary
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// Gets or sets the compute environment type for the service. Possible
        /// values include: 'ACI', 'BATCH', 'AKS', 'FPGA'
        /// </summary>
        [JsonProperty(PropertyName = "computeType")]
        public string ComputeType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (ComputeType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ComputeType");
            }
        }
    }
}
