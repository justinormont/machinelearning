// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class GeneralSection
    {
        /// <summary>
        /// Initializes a new instance of the GeneralSection class.
        /// </summary>
        public GeneralSection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GeneralSection class.
        /// </summary>
        /// <param name="promoteHeadersMode">Possible values include: 'None',
        /// 'Ungrouped', 'FirstFile', 'Grouped', 'AllFiles', 'ConstantGrouped',
        /// 'SameAllFiles'</param>
        /// <param name="skipMode">Possible values include: 'None',
        /// 'Ungrouped', 'FirstFile', 'Grouped', 'AllFiles'</param>
        public GeneralSection(bool? dayFirst = default(bool?), bool? includePath = default(bool?), string fileType = default(string), string commentLineCharacter = default(string), string promoteHeadersMode = default(string), string skipMode = default(string), bool? handleQuotedLineBreaks = default(bool?), DataSourceProperties sourcePropertiesOverride = default(DataSourceProperties))
        {
            DayFirst = dayFirst;
            IncludePath = includePath;
            FileType = fileType;
            CommentLineCharacter = commentLineCharacter;
            PromoteHeadersMode = promoteHeadersMode;
            SkipMode = skipMode;
            HandleQuotedLineBreaks = handleQuotedLineBreaks;
            SourcePropertiesOverride = sourcePropertiesOverride;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dayFirst")]
        public bool? DayFirst { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "includePath")]
        public bool? IncludePath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fileType")]
        public string FileType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "commentLineCharacter")]
        public string CommentLineCharacter { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Ungrouped',
        /// 'FirstFile', 'Grouped', 'AllFiles', 'ConstantGrouped',
        /// 'SameAllFiles'
        /// </summary>
        [JsonProperty(PropertyName = "promoteHeadersMode")]
        public string PromoteHeadersMode { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Ungrouped',
        /// 'FirstFile', 'Grouped', 'AllFiles'
        /// </summary>
        [JsonProperty(PropertyName = "skipMode")]
        public string SkipMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "handleQuotedLineBreaks")]
        public bool? HandleQuotedLineBreaks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourcePropertiesOverride")]
        public DataSourceProperties SourcePropertiesOverride { get; set; }

    }
}
