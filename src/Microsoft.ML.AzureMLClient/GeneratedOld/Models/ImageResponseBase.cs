// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ImageResponseBase
    {
        /// <summary>
        /// Initializes a new instance of the ImageResponseBase class.
        /// </summary>
        public ImageResponseBase()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ImageResponseBase class.
        /// </summary>
        /// <param name="name">The image name.</param>
        /// <param name="imageRequestTypeDiscriminator">Property used by
        /// Swagger for polymorphic object generation.</param>
        /// <param name="id">The image id.</param>
        /// <param name="version">The image version.</param>
        /// <param name="description">The image description.</param>
        /// <param name="tags">Image tag list</param>
        /// <param name="kvTags">Image tag dictionary</param>
        /// <param name="properties">Image property dictionary</param>
        /// <param name="createdTime">Time image was created.</param>
        /// <param name="modifiedTime">Time image was last modified.</param>
        /// <param name="creationState">Possible values include: 'NotStarted',
        /// 'Running', 'Cancelled', 'Succeeded', 'Failed'</param>
        /// <param name="modelIds">The list of model Id's.</param>
        /// <param name="modelDetails">The list of models.</param>
        /// <param name="imageLocation">Image location string.</param>
        /// <param name="imageBuildLogUri">The Uri to the image build
        /// logs.</param>
        public ImageResponseBase(string name, string imageRequestTypeDiscriminator, string id = default(string), int? version = default(int?), string description = default(string), IList<string> tags = default(IList<string>), IDictionary<string, string> kvTags = default(IDictionary<string, string>), IDictionary<string, string> properties = default(IDictionary<string, string>), System.DateTime? createdTime = default(System.DateTime?), System.DateTime? modifiedTime = default(System.DateTime?), string imageType = default(string), string creationState = default(string), ErrorResponse error = default(ErrorResponse), IList<string> modelIds = default(IList<string>), IList<Model> modelDetails = default(IList<Model>), string imageLocation = default(string), string imageBuildLogUri = default(string))
        {
            Id = id;
            Name = name;
            Version = version;
            Description = description;
            Tags = tags;
            KvTags = kvTags;
            Properties = properties;
            CreatedTime = createdTime;
            ModifiedTime = modifiedTime;
            ImageType = imageType;
            CreationState = creationState;
            Error = error;
            ModelIds = modelIds;
            ModelDetails = modelDetails;
            ImageLocation = imageLocation;
            ImageBuildLogUri = imageBuildLogUri;
            ImageRequestTypeDiscriminator = imageRequestTypeDiscriminator;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the image id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the image name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the image version.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public int? Version { get; set; }

        /// <summary>
        /// Gets or sets the image description.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets image tag list
        /// </summary>
        [JsonProperty(PropertyName = "tags")]
        public IList<string> Tags { get; set; }

        /// <summary>
        /// Gets or sets image tag dictionary
        /// </summary>
        [JsonProperty(PropertyName = "kvTags")]
        public IDictionary<string, string> KvTags { get; set; }

        /// <summary>
        /// Gets or sets image property dictionary
        /// </summary>
        [JsonProperty(PropertyName = "properties")]
        public IDictionary<string, string> Properties { get; set; }

        /// <summary>
        /// Gets or sets time image was created.
        /// </summary>
        [JsonProperty(PropertyName = "createdTime")]
        public System.DateTime? CreatedTime { get; set; }

        /// <summary>
        /// Gets or sets time image was last modified.
        /// </summary>
        [JsonProperty(PropertyName = "modifiedTime")]
        public System.DateTime? ModifiedTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "imageType")]
        public string ImageType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'NotStarted', 'Running',
        /// 'Cancelled', 'Succeeded', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "creationState")]
        public string CreationState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public ErrorResponse Error { get; set; }

        /// <summary>
        /// Gets or sets the list of model Id's.
        /// </summary>
        [JsonProperty(PropertyName = "modelIds")]
        public IList<string> ModelIds { get; set; }

        /// <summary>
        /// Gets or sets the list of models.
        /// </summary>
        [JsonProperty(PropertyName = "modelDetails")]
        public IList<Model> ModelDetails { get; set; }

        /// <summary>
        /// Gets or sets image location string.
        /// </summary>
        [JsonProperty(PropertyName = "imageLocation")]
        public string ImageLocation { get; set; }

        /// <summary>
        /// Gets or sets the Uri to the image build logs.
        /// </summary>
        [JsonProperty(PropertyName = "imageBuildLogUri")]
        public string ImageBuildLogUri { get; set; }

        /// <summary>
        /// Gets or sets property used by Swagger for polymorphic object
        /// generation.
        /// </summary>
        [JsonProperty(PropertyName = "imageRequestTypeDiscriminator")]
        public string ImageRequestTypeDiscriminator { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (ImageRequestTypeDiscriminator == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ImageRequestTypeDiscriminator");
            }
            if (ModelDetails != null)
            {
                foreach (var element in ModelDetails)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
