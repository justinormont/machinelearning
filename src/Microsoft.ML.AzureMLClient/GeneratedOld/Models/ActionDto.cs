// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Azure.MachineLearning.Services.GeneratedOld.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ActionDto
    {
        /// <summary>
        /// Initializes a new instance of the ActionDto class.
        /// </summary>
        public ActionDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ActionDto class.
        /// </summary>
        public ActionDto(System.Guid? actionId = default(System.Guid?), string actionType = default(string), string definitionVersion = default(string), string datasetSnapshotName = default(string), System.Guid? workspaceId = default(System.Guid?), System.Guid? datasetId = default(System.Guid?), string computeTarget = default(string), IDictionary<string, string> arguments = default(IDictionary<string, string>), IList<string> resultArtifactIds = default(IList<string>), System.DateTime? createdTime = default(System.DateTime?), string status = default(string), ErrorResponse error = default(ErrorResponse), IList<RunDetailsWarningDto> warnings = default(IList<RunDetailsWarningDto>), System.DateTime? startTimeUtc = default(System.DateTime?), System.DateTime? endTimeUtc = default(System.DateTime?))
        {
            ActionId = actionId;
            ActionType = actionType;
            DefinitionVersion = definitionVersion;
            DatasetSnapshotName = datasetSnapshotName;
            WorkspaceId = workspaceId;
            DatasetId = datasetId;
            ComputeTarget = computeTarget;
            Arguments = arguments;
            ResultArtifactIds = resultArtifactIds;
            CreatedTime = createdTime;
            Status = status;
            Error = error;
            Warnings = warnings;
            StartTimeUtc = startTimeUtc;
            EndTimeUtc = endTimeUtc;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "actionId")]
        public System.Guid? ActionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "actionType")]
        public string ActionType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "definitionVersion")]
        public string DefinitionVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "datasetSnapshotName")]
        public string DatasetSnapshotName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "workspaceId")]
        public System.Guid? WorkspaceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "datasetId")]
        public System.Guid? DatasetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "computeTarget")]
        public string ComputeTarget { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "arguments")]
        public IDictionary<string, string> Arguments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "resultArtifactIds")]
        public IList<string> ResultArtifactIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdTime")]
        public System.DateTime? CreatedTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public ErrorResponse Error { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "warnings")]
        public IList<RunDetailsWarningDto> Warnings { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startTimeUtc")]
        public System.DateTime? StartTimeUtc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endTimeUtc")]
        public System.DateTime? EndTimeUtc { get; set; }

    }
}
